<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Tic-Tac-Toe</title>
<style>
    body {
        font-family: Arial, sans-serif;
        background: #0a0a0a;
        color: white;
        text-align: center;
    }
    h1 { color: #ff0066; }
    .board {
        display: grid;
        grid-template-columns: repeat(3, 100px);
        gap: 5px;
        justify-content: center;
        margin-top: 20px;
    }
    .cell {
        width: 100px;
        height: 100px;
        background: #1a1a1a;
        font-size: 2em;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        border-radius: 10px;
        transition: background 0.3s;
    }
    .cell:hover { background: #333; }
    .winner { color: #00ff99; font-size: 1.5em; margin-top: 20px; }
    button {
        margin-top: 20px;
        padding: 10px 20px;
        background: #ff0066;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }
</style>
</head>
<body>

<h1>Tic-Tac-Toe</h1>
<div class="board" id="board"></div>
<div class="winner" id="winner"></div>
<button onclick="resetGame()">Restart Game</button>

<script>
let board = ["", "", "", "", "", "", "", "", ""];
let currentPlayer = "X";
let gameOver = false;

function renderBoard() {
    let boardDiv = document.getElementById("board");
    boardDiv.innerHTML = "";
    board.forEach((cell, i) => {
        let cellDiv = document.createElement("div");
        cellDiv.classList.add("cell");
        cellDiv.textContent = cell;
        cellDiv.onclick = () => makeMove(i);
        boardDiv.appendChild(cellDiv);
    });
}

function makeMove(index) {
    if (board[index] === "" && !gameOver) {
        board[index] = currentPlayer;
        checkWinner();
        currentPlayer = currentPlayer === "X" ? "O" : "X";
        renderBoard();
    }
}

function checkWinner() {
    const winPatterns = [
        [0,1,2], [3,4,5], [6,7,8],
        [0,3,6], [1,4,7], [2,5,8],
        [0,4,8], [2,4,6]
    ];
    for (let pattern of winPatterns) {
        let [a, b, c] = pattern;
        if (board[a] && board[a] === board[b] && board[a] === board[c]) {
            document.getElementById("winner").textContent = `${board[a]} Wins!`;
            gameOver = true;
            return;
        }
    }
    if (!board.includes("")) {
        document.getElementById("winner").textContent = "It's a Draw!";
        gameOver = true;
    }
}

function resetGame() {
    board = ["", "", "", "", "", "", "", "", ""];
    currentPlayer = "X";
    gameOver = false;
    document.getElementById("winner").textContent = "";
    renderBoard();
}

renderBoard();
</script>

</body>
</html>
